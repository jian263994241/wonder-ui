{
  "description": "",
  "displayName": "InputBase",
  "methods": [],
  "props": {
    "aria-describedby": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "@ignore"
    },
    "autoComplete": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "This prop helps users to fill forms faster, especially on mobile devices.\nThe name can be confusing, as it's more like an autofill.\nYou can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill)."
    },
    "autoFocus": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the `input` element will be focused during the first mount."
    },
    "classes": {
      "type": {
        "name": "object"
      },
      "required": true,
      "description": "Override or extend the styles applied to the component.\nSee [CSS API](#css) below for more details."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "The CSS class name of the wrapper element."
    },
    "color": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'primary'",
            "computed": false
          },
          {
            "value": "'secondary'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "The color of the component. It supports those theme colors that make sense for this component."
    },
    "defaultValue": {
      "type": {
        "name": "any"
      },
      "required": false,
      "description": "The default `input` element value. Use when the component is not controlled."
    },
    "disabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the `input` element will be disabled."
    },
    "endAdornment": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "End `InputAdornment` for this component."
    },
    "error": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the input will indicate an error. This is normally obtained via context from\nFormControl."
    },
    "fullWidth": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the input will take up the full width of its container."
    },
    "id": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "The id of the `input` element."
    },
    "inputComponent": {
      "type": {
        "name": "elementType"
      },
      "required": false,
      "description": "The component used for the `input` element.\nEither a string to use a DOM element or a component."
    },
    "inputProps": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element."
    },
    "inputRef": {
      "type": {
        "name": "custom",
        "raw": "refType"
      },
      "required": false,
      "description": "Pass a ref to the `input` element."
    },
    "margin": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'dense'",
            "computed": false
          },
          {
            "value": "'none'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "If `dense`, will adjust vertical spacing. This is normally obtained via context from\nFormControl."
    },
    "multiline": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, a textarea element will be rendered."
    },
    "name": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Name attribute of the `input` element."
    },
    "onBlur": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Callback fired when the input is blurred.\n\nNotice that the first argument (event) might be undefined."
    },
    "onChange": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Callback fired when the value is changed.\n\n@param {object} event The event source of the callback.\nYou can pull out the new value by accessing `event.target.value` (string)."
    },
    "onClick": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "@ignore"
    },
    "onFocus": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "@ignore"
    },
    "onKeyDown": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "@ignore"
    },
    "onKeyUp": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "@ignore"
    },
    "placeholder": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "The short hint displayed in the input before the user enters a value."
    },
    "readOnly": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "It prevents the user from changing the value of the field\n(not from interacting with the field)."
    },
    "renderSuffix": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "@ignore"
    },
    "required": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "If `true`, the `input` element will be required."
    },
    "rows": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "string"
          },
          {
            "name": "number"
          }
        ]
      },
      "required": false,
      "description": "Number of rows to display when multiline option is set to true."
    },
    "rowsMax": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "string"
          },
          {
            "name": "number"
          }
        ]
      },
      "required": false,
      "description": "Maximum number of rows to display when multiline option is set to true."
    },
    "rowsMin": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "string"
          },
          {
            "name": "number"
          }
        ]
      },
      "required": false,
      "description": "Minimum number of rows to display when multiline option is set to true."
    },
    "startAdornment": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Start `InputAdornment` for this component."
    },
    "type": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types)."
    },
    "value": {
      "type": {
        "name": "any"
      },
      "required": false,
      "description": "The value of the `input` element, required for a controlled component."
    }
  }
}