{
  "description": "@visibleName AnimatedRoute",
  "displayName": "RouteTransition",
  "methods": [],
  "props": {
    "animation": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "'slide'",
            "computed": false
          },
          {
            "value": "'fade'",
            "computed": false
          },
          {
            "value": "'scale'",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Animation type"
    },
    "redirect": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Redirect url"
    },
    "async": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Async load component"
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Add classes to root element\n@ignore"
    },
    "style": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Add styles to root element\n@ignore"
    },
    "fallback": {
      "type": {
        "name": "any"
      },
      "required": false,
      "description": "React.Suspense"
    },
    "animationDisabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Disable animation"
    },
    "disabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Disable route"
    },
    "component": {
      "type": {
        "name": "custom",
        "raw": "(props, propName) => {\n  const propsCopy = Object.assign({}, props);\n  if (props[propName]) {\n    if (props[propName].default) {\n      propsCopy[propName] = props[propName].default;\n    }\n    return Route.propTypes.component(propsCopy, propName);\n  }\n}"
      },
      "required": false,
      "description": "component"
    }
  },
  "composes": [
    "react-router-dom"
  ]
}