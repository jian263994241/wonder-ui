'use strict';
function _interopDefault(e) {
  return e && 'object' == typeof e && 'default' in e ? e.default : e;
}
Object.defineProperty(exports, '__esModule', { value: !0 });
var deepmerge = _interopDefault(require('@wonder-ui/utils/deepmerge')),
  device = _interopDefault(require('@wonder-ui/utils/device')),
  React = _interopDefault(require('react')),
  reactJss = require('react-jss');
function _extends() {
  return (_extends =
    Object.assign ||
    function (e) {
      for (var t = 1; t < arguments.length; t++) {
        var r = arguments[t];
        for (var o in r)
          Object.prototype.hasOwnProperty.call(r, o) && (e[o] = r[o]);
      }
      return e;
    }).apply(this, arguments);
}
function _objectWithoutPropertiesLoose(e, t) {
  if (null == e) return {};
  for (var r, o = {}, a = Object.keys(e), n = 0; n < a.length; n++)
    (r = a[n]), 0 <= t.indexOf(r) || (o[r] = e[r]);
  return o;
}
var create = function (e) {
    return 'url(data:image/svg+xml;utf8,' + encodeURIComponent(e) + ')';
  },
  svg = Object.freeze({ create: create }),
  easing = {
    easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
    easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
    easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
    ease: 'cubic-bezier(0.25, 0.01, 0.25, 1)',
    sharp: 'cubic-bezier(0.4, 0, 0.6, 1)',
  },
  duration = {
    shortest: 150,
    shorter: 200,
    short: 250,
    standard: 300,
    complex: 375,
    enteringScreen: 225,
    leavingScreen: 195,
  },
  formatMs = function (e) {
    return Math.round(e) + 'ms';
  },
  create$1 = function (e, t) {
    void 0 === e && (e = ['all']), void 0 === t && (t = {});
    var r = t.duration,
      o = void 0 === r ? duration.standard : r,
      a = t.easing,
      n = void 0 === a ? easing.easeInOut : a,
      i = t.delay,
      s = void 0 === i ? 0 : i;
    return (Array.isArray(e) ? e : [e])
      .map(function (e) {
        return (
          e +
          ' ' +
          ('string' == typeof o ? o : formatMs(o)) +
          ' ' +
          n +
          ' ' +
          ('string' == typeof s ? s : formatMs(s))
        );
      })
      .join(',');
  },
  transitions = Object.freeze({
    easing: easing,
    duration: duration,
    formatMs: formatMs,
    create: create$1,
  });
function _create(e, t, r) {
  var o;
  void 0 === t && (t = '#999'), void 0 === r && (r = {});
  var a = {
      content: '""',
      position: 'absolute',
      backgroundColor: t,
      display: 'block',
      zIndex: 15,
    },
    n = device.desktop ? 2 : device.pixelRatio,
    i = { transform: 'scaleY(' + 1 / n + ')' },
    s = { transform: 'scaleX(' + 1 / n + ')' };
  switch (e) {
    case 'top':
      o = {
        '&:before': _extends(
          {},
          a,
          i,
          {
            left: 0,
            top: 0,
            bottom: 'auto',
            right: 'auto',
            height: 1,
            width: '100%',
            transformOrigin: '50% 0%',
          },
          r,
        ),
      };
      break;
    case 'left':
      o = {
        '&:before': _extends(
          {},
          a,
          s,
          {
            left: 0,
            top: 0,
            bottom: 'auto',
            right: 'auto',
            width: 1,
            height: '100%',
            transformOrigin: '100% 50%',
          },
          r,
        ),
      };
      break;
    case 'bottom':
      o = {
        '&:after': _extends(
          {},
          a,
          i,
          {
            left: 0,
            bottom: 0,
            right: 'auto',
            top: 'auto',
            height: 1,
            width: '100%',
            transformOrigin: '50% 100%',
          },
          r,
        ),
      };
      break;
    case 'right':
      o = {
        '&:after': _extends(
          {},
          a,
          s,
          {
            right: 0,
            top: 0,
            left: 'auto',
            bottom: 'auto',
            width: 1,
            height: '100%',
            transformOrigin: '0% 50%',
          },
          r,
        ),
      };
  }
  return o;
}
function remove(e) {
  var t = {};
  switch (e) {
    case 'left':
    case 'top':
      t = { '&:before': { display: 'none' } };
      break;
    case 'right':
    case 'bottom':
      t = { '&:after': { display: 'none' } };
  }
  return t;
}
function createHairline(r) {
  return {
    create: function (e, t) {
      return _create(e, r.divider, t);
    },
    remove: remove,
  };
}
function clamp(e, t, r) {
  return (
    void 0 === t && (t = 0), void 0 === r && (r = 1), e < t ? t : r < e ? r : e
  );
}
function hexToRgb(e) {
  e = e.substr(1);
  var t = new RegExp('.{1,' + e.length / 3 + '}', 'g'),
    r = e.match(t);
  return (
    r &&
      1 === r[0].length &&
      (r = r.map(function (e) {
        return e + e;
      })),
    r
      ? 'rgb(' +
        r
          .map(function (e) {
            return parseInt(e, 16);
          })
          .join(', ') +
        ')'
      : ''
  );
}
function intToHex(e) {
  var t = e.toString(16);
  return 1 === t.length ? '0' + t : t;
}
function rgbToHex(e) {
  return 0 === e.indexOf('#')
    ? e
    : '#' +
        decomposeColor(e)
          .values.map(function (e) {
            return intToHex(e);
          })
          .join('');
}
function hslToRgb(e) {
  function t(e, t) {
    return (
      void 0 === t && (t = (e + o / 30) % 12),
      n - i * Math.max(Math.min(t - 3, 9 - t, 1), -1)
    );
  }
  var r = (e = decomposeColor(e)).values,
    o = r[0],
    a = r[1] / 100,
    n = r[2] / 100,
    i = a * Math.min(n, 1 - n),
    s = 'rgb',
    d = [
      Math.round(255 * t(0)),
      Math.round(255 * t(8)),
      Math.round(255 * t(4)),
    ];
  return (
    'hsla' === e.type && ((s += 'a'), d.push(r[3])),
    recomposeColor({ type: s, values: d })
  );
}
function decomposeColor(e) {
  if (e.type) return e;
  if ('#' === e.charAt(0)) return decomposeColor(hexToRgb(e));
  var t = e.indexOf('('),
    r = e.substring(0, t);
  if (-1 === ['rgb', 'rgba', 'hsl', 'hsla'].indexOf(r))
    throw new Error(
      [
        'Colors: unsupported `' + e + '` color.',
        'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().',
      ].join('\n'),
    );
  return {
    type: r,
    values: e
      .substring(t + 1, e.length - 1)
      .split(',')
      .map(function (e) {
        return parseFloat(e);
      }),
  };
}
function recomposeColor(e) {
  var t = e.type,
    r = e.values;
  return (
    -1 !== t.indexOf('rgb')
      ? (r = r.map(function (e, t) {
          return t < 3 ? parseInt(e, 10) : e;
        }))
      : -1 !== t.indexOf('hsl') && ((r[1] = r[1] + '%'), (r[2] = r[2] + '%')),
    t + '(' + r.join(', ') + ')'
  );
}
function getContrastRatio(e, t) {
  var r = getLuminance(e),
    o = getLuminance(t);
  return (Math.max(r, o) + 0.05) / (Math.min(r, o) + 0.05);
}
function getLuminance(e) {
  var t = (t =
    'hsl' === (e = decomposeColor(e)).type
      ? decomposeColor(hslToRgb(e)).values
      : e.values).map(function (e) {
    return (e /= 255) <= 0.03928
      ? e / 12.92
      : Math.pow((e + 0.055) / 1.055, 2.4);
  });
  return Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function emphasize(e, t) {
  return (
    void 0 === t && (t = 0.15), (0.5 < getLuminance(e) ? darken : lighten)(e, t)
  );
}
function fade(e, t) {
  return (
    (e = decomposeColor(e)),
    (t = clamp(t)),
    ('rgb' !== e.type && 'hsl' !== e.type) || (e.type += 'a'),
    (e.values[3] = t),
    recomposeColor(e)
  );
}
function darken(e, t) {
  if (((e = decomposeColor(e)), (t = clamp(t)), -1 !== e.type.indexOf('hsl')))
    e.values[2] *= 1 - t;
  else if (-1 !== e.type.indexOf('rgb'))
    for (var r = 0; r < 3; r += 1) e.values[r] *= 1 - t;
  return recomposeColor(e);
}
function lighten(e, t) {
  if (((e = decomposeColor(e)), (t = clamp(t)), -1 !== e.type.indexOf('hsl')))
    e.values[2] += (100 - e.values[2]) * t;
  else if (-1 !== e.type.indexOf('rgb'))
    for (var r = 0; r < 3; r += 1) e.values[r] += (255 - e.values[r]) * t;
  return recomposeColor(e);
}
var colorManipulator = Object.freeze({
    hexToRgb: hexToRgb,
    rgbToHex: rgbToHex,
    hslToRgb: hslToRgb,
    decomposeColor: decomposeColor,
    recomposeColor: recomposeColor,
    getContrastRatio: getContrastRatio,
    getLuminance: getLuminance,
    emphasize: emphasize,
    fade: fade,
    darken: darken,
    lighten: lighten,
  }),
  blue = {
    50: '#e3f2fd',
    100: '#bbdefb',
    200: '#90caf9',
    300: '#64b5f6',
    400: '#42a5f5',
    500: '#2196f3',
    600: '#1e88e5',
    700: '#1976d2',
    800: '#1565c0',
    900: '#0d47a1',
    A100: '#82b1ff',
    A200: '#448aff',
    A400: '#2979ff',
    A700: '#2962ff',
  },
  common = { black: '#000', white: '#fff' },
  green = {
    50: '#e8f5e9',
    100: '#c8e6c9',
    200: '#a5d6a7',
    300: '#81c784',
    400: '#66bb6a',
    500: '#4caf50',
    600: '#43a047',
    700: '#388e3c',
    800: '#2e7d32',
    900: '#1b5e20',
    A100: '#b9f6ca',
    A200: '#69f0ae',
    A400: '#00e676',
    A700: '#00c853',
  },
  grey = {
    50: '#fafafa',
    100: '#f5f5f5',
    200: '#eeeeee',
    300: '#e0e0e0',
    400: '#bdbdbd',
    500: '#9e9e9e',
    600: '#757575',
    700: '#616161',
    800: '#424242',
    900: '#212121',
    A100: '#d5d5d5',
    A200: '#aaaaaa',
    A400: '#303030',
    A700: '#616161',
  },
  orange = {
    50: '#fff3e0',
    100: '#ffe0b2',
    200: '#ffcc80',
    300: '#ffb74d',
    400: '#ffa726',
    500: '#ff9800',
    600: '#fb8c00',
    700: '#f57c00',
    800: '#ef6c00',
    900: '#e65100',
    A100: '#ffd180',
    A200: '#ffab40',
    A400: '#ff9100',
    A700: '#ff6d00',
  },
  pink = {
    50: '#fce4ec',
    100: '#f8bbd0',
    200: '#f48fb1',
    300: '#f06292',
    400: '#ec407a',
    500: '#e91e63',
    600: '#d81b60',
    700: '#c2185b',
    800: '#ad1457',
    900: '#880e4f',
    A100: '#ff80ab',
    A200: '#ff4081',
    A400: '#f50057',
    A700: '#c51162',
  },
  red = {
    50: '#ffebee',
    100: '#ffcdd2',
    200: '#ef9a9a',
    300: '#e57373',
    400: '#ef5350',
    500: '#f44336',
    600: '#e53935',
    700: '#d32f2f',
    800: '#c62828',
    900: '#b71c1c',
    A100: '#ff8a80',
    A200: '#ff5252',
    A400: '#ff1744',
    A700: '#d50000',
  },
  light = {
    text: {
      primary: 'rgba(0, 0, 0, 0.87)',
      secondary: 'rgba(0, 0, 0, 0.54)',
      disabled: 'rgba(0, 0, 0, 0.38)',
      hint: 'rgba(0, 0, 0, 0.38)',
    },
    divider: '#E0E0E0',
    background: { paper: common.white, default: grey[50] },
    action: {
      active: 'rgba(0, 0, 0, 0.54)',
      hover: 'rgba(0, 0, 0, 0.08)',
      hoverOpacity: 0.08,
      selected: 'rgba(0, 0, 0, 0.14)',
      disabled: 'rgba(0, 0, 0, 0.26)',
      disabledBackground: 'rgba(0, 0, 0, 0.12)',
    },
  },
  dark = {
    text: {
      primary: common.white,
      secondary: 'rgba(255, 255, 255, 0.7)',
      disabled: 'rgba(255, 255, 255, 0.5)',
      hint: 'rgba(255, 255, 255, 0.5)',
      icon: 'rgba(255, 255, 255, 0.5)',
    },
    divider: 'rgba(255, 255, 255, 0.12)',
    background: { paper: grey[800], default: '#303030' },
    action: {
      active: common.white,
      hover: 'rgba(255, 255, 255, 0.1)',
      hoverOpacity: 0.1,
      selected: 'rgba(255, 255, 255, 0.2)',
      disabled: 'rgba(255, 255, 255, 0.3)',
      disabledBackground: 'rgba(255, 255, 255, 0.12)',
    },
  };
function addLightOrDark(e, t, r, o) {
  e[t] ||
    (e.hasOwnProperty(r)
      ? (e[t] = e[r])
      : 'light' === t
      ? (e.light = lighten(e.main, o))
      : 'dark' === t && (e.dark = darken(e.main, 1.5 * o)));
}
function createPalette(e) {
  var t = e.primary,
    r =
      void 0 === t ? { light: blue.A200, main: blue.A400, dark: blue.A700 } : t,
    o = e.secondary,
    a =
      void 0 === o ? { light: pink.A200, main: pink.A400, dark: pink.A700 } : o,
    n = e.error,
    i = void 0 === n ? { light: red[300], main: red[500], dark: red[700] } : n,
    s = e.warning,
    d =
      void 0 === s
        ? { light: orange[300], main: orange[500], dark: orange[700] }
        : s,
    c = e.info,
    h =
      void 0 === c ? { light: blue[300], main: blue[500], dark: blue[700] } : c,
    u = e.success,
    f =
      void 0 === u
        ? { light: green[300], main: green[500], dark: green[700] }
        : u,
    l = e.type,
    g = void 0 === l ? 'light' : l,
    p = e.contrastThreshold,
    m = void 0 === p ? 3 : p,
    b = e.tonalOffset,
    v = void 0 === b ? 0.2 : b,
    y = _objectWithoutPropertiesLoose(e, [
      'primary',
      'secondary',
      'error',
      'warning',
      'info',
      'success',
      'type',
      'contrastThreshold',
      'tonalOffset',
    ]);
  function x(e) {
    if (!e)
      throw new TypeError(
        'Material-UI: missing background argument in getContrastText(' +
          e +
          ').',
      );
    return getContrastRatio(e, dark.text.primary) >= m
      ? dark.text.primary
      : light.text.primary;
  }
  function w(e, t, r, o) {
    return (
      void 0 === t && (t = 500),
      void 0 === r && (r = 300),
      void 0 === o && (o = 700),
      !(e = _extends({}, e)).main && e[t] && (e.main = e[t]),
      addLightOrDark(e, 'light', r, v),
      addLightOrDark(e, 'dark', o, v),
      e.contrastText || (e.contrastText = x(e.main)),
      e
    );
  }
  var S = { dark: dark, light: light };
  return deepmerge(
    _extends(
      {
        common: common,
        type: g,
        primary: w(r),
        secondary: w(a, 'A400', 'A200', 'A700'),
        error: w(i),
        warning: w(d),
        info: w(h),
        success: w(f),
        grey: grey,
        contrastThreshold: m,
        getContrastText: x,
        augmentColor: w,
        tonalOffset: v,
      },
      S[g],
    ),
    y,
  );
}
function createShape(e) {
  return _extends(
    {
      barHeight: 46,
      borderRadius: 4,
      buttonBorderRadius: 23,
      listItemHeight: 46,
    },
    e,
  );
}
function createSpacing(t) {
  if ((void 0 === t && (t = 8), t.mui)) return t;
  function e() {
    for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
      t[r] = arguments[r];
    return 0 === t.length
      ? o(1)
      : 1 === t.length
      ? o(t[0])
      : t
          .map(function (e) {
            var t = o(e);
            return 'number' == typeof t ? t + 'px' : t;
          })
          .join(' ');
  }
  var o =
    'function' == typeof t
      ? t
      : function (e) {
          return t * e;
        };
  return (e.mui = !0), e;
}
function round(e) {
  return Math.round(1e5 * e) / 1e5;
}
var caseAllCaps = { textTransform: 'uppercase' },
  defaultFontFamily =
    'PingFang SC ,PingHei, DroidSansFallback, Hiragino Sans GB, STHeiti, Roboto, Noto, Helvetica Neue, Helvetica, Arial, SimSun, sans-serif',
  ellipsis = {
    width: 'auto',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
  };
function createTypography(e, t) {
  function r(e, t, r, o, a) {
    return _extends(
      { fontFamily: n, fontWeight: e, fontSize: S(t), lineHeight: r },
      n === defaultFontFamily ? { letterSpacing: round(o / t) + 'em' } : {},
      a,
      v,
    );
  }
  var o = 'function' == typeof t ? t(e) : t,
    a = o.fontFamily,
    n = void 0 === a ? defaultFontFamily : a,
    i = o.fontSize,
    s = void 0 === i ? 14 : i,
    d = o.fontWeightLight,
    c = void 0 === d ? 300 : d,
    h = o.fontWeightRegular,
    u = void 0 === h ? 400 : h,
    f = o.fontWeightMedium,
    l = void 0 === f ? 500 : f,
    g = o.fontWeightBold,
    p = void 0 === g ? 700 : g,
    m = o.htmlFontSize,
    b = void 0 === m ? 16 : m,
    v = o.allVariants,
    y = o.pxToRem,
    x = _objectWithoutPropertiesLoose(o, [
      'fontFamily',
      'fontSize',
      'fontWeightLight',
      'fontWeightRegular',
      'fontWeightMedium',
      'fontWeightBold',
      'htmlFontSize',
      'allVariants',
      'pxToRem',
    ]),
    w = s / 14,
    S =
      y ||
      function (e) {
        return (e / b) * w + 'rem';
      },
    T = {
      h1: r(c, 40, 1, -1.5),
      h2: r(c, 36, 1, -0.5),
      h3: r(u, 32, 1.04, 0),
      h4: r(u, 28, 1.17, 0.25),
      h5: r(u, 24, 1.33, 0),
      h6: r(l, 20, 1.6, 0.15),
      subtitle1: r(u, 16, 1.75, 0.15),
      subtitle2: r(l, 14, 1.57, 0.1),
      body1: r(u, 16, 1.5, 0.15),
      body2: r(u, 14, 1.43, 0.15),
      button: r(l, 14, 1.75, 0.4),
      caption: r(u, 12, 1.66, 0.4),
      overline: r(u, 12, 2.66, 1, caseAllCaps),
    };
  return deepmerge(
    _extends(
      {
        ellipsis: ellipsis,
        htmlFontSize: b,
        pxToRem: S,
        round: round,
        fontFamily: n,
        fontSize: s,
        fontWeightLight: c,
        fontWeightRegular: u,
        fontWeightMedium: l,
        fontWeightBold: p,
      },
      T,
    ),
    x,
    { clone: !1 },
  );
}
var shadowKeyUmbraOpacity = 0.16,
  shadowKeyPenumbraOpacity = 0.14,
  shadowAmbientShadowOpacity = 0.12;
function createShadow() {
  return [
    (arguments.length <= 0 ? void 0 : arguments[0]) +
      'px ' +
      (arguments.length <= 1 ? void 0 : arguments[1]) +
      'px ' +
      (arguments.length <= 2 ? void 0 : arguments[2]) +
      'px ' +
      (arguments.length <= 3 ? void 0 : arguments[3]) +
      'px rgba(0,0,0,' +
      shadowKeyUmbraOpacity +
      ')',
    (arguments.length <= 4 ? void 0 : arguments[4]) +
      'px ' +
      (arguments.length <= 5 ? void 0 : arguments[5]) +
      'px ' +
      (arguments.length <= 6 ? void 0 : arguments[6]) +
      'px ' +
      (arguments.length <= 7 ? void 0 : arguments[7]) +
      'px rgba(0,0,0,' +
      shadowKeyPenumbraOpacity +
      ')',
    (arguments.length <= 8 ? void 0 : arguments[8]) +
      'px ' +
      (arguments.length <= 9 ? void 0 : arguments[9]) +
      'px ' +
      (arguments.length <= 10 ? void 0 : arguments[10]) +
      'px ' +
      (arguments.length <= 11 ? void 0 : arguments[11]) +
      'px rgba(0,0,0,' +
      shadowAmbientShadowOpacity +
      ')',
  ].join(',');
}
var shadows = [
    'none',
    createShadow(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1),
    createShadow(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2),
    createShadow(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2),
    createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
    createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
    createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
    createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
    createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
    createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
    createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
    createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
    createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
    createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
    createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
    createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
    createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
    createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
    createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
    createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
    createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
    createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
    createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
    createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
    createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
  ],
  zIndex = {
    mobileStepper: 1e3,
    speedDial: 1050,
    appBar: 1100,
    drawer: 1200,
    modal: 1300,
    snackbar: 1400,
    tooltip: 1500,
  };
function createTheme(e) {
  void 0 === e && (e = {});
  var t = e.palette,
    r = void 0 === t ? {} : t,
    o = e.shadows,
    a = e.spacing,
    n = void 0 === a ? 8 : a,
    i = e.typography,
    s = void 0 === i ? {} : i,
    d = e.shape,
    c = void 0 === d ? {} : d,
    h = _objectWithoutPropertiesLoose(e, [
      'palette',
      'shadows',
      'spacing',
      'typography',
      'shape',
    ]),
    u = createPalette(r);
  return _extends(
    {
      hairline: createHairline(u),
      palette: u,
      shadows: o || shadows,
      shape: createShape(c),
      spacing: createSpacing(n),
      svg: svg,
      transitions: transitions,
      typography: createTypography(u, s),
      zIndex: zIndex,
      device: device,
    },
    h,
  );
}
var defaultTheme = createTheme(),
  ThemeContext = React.createContext(defaultTheme),
  theming = reactJss.createTheming(ThemeContext),
  withTheme = theming.withTheme,
  useTheme = theming.useTheme,
  ThemeProvider = theming.ThemeProvider;
function createUseStyles(e, t) {
  return reactJss.createUseStyles(e, _extends({ theming: theming }, t));
}
function styled(e, t) {
  return reactJss.styled(e, _extends({ theming: theming }, t));
}
function withStyles(t, e) {
  void 0 === e && (e = {});
  var r = e.name,
    o = _objectWithoutPropertiesLoose(e, ['name']);
  return function (e) {
    return (
      r && (e.displayName = r),
      reactJss.withStyles(t, _extends({ theming: theming }, o))(e)
    );
  };
}
(exports.colorManipulator = colorManipulator),
  (exports.transitions = transitions),
  (exports.createTheme = createTheme),
  (exports.createUseStyles = createUseStyles),
  (exports.defaultTheme = defaultTheme),
  (exports.styled = styled),
  (exports.withStyles = withStyles),
  (exports.ThemeContext = ThemeContext),
  (exports.withTheme = withTheme),
  (exports.useTheme = useTheme),
  (exports.ThemeProvider = ThemeProvider);
//# sourceMappingURL=wonder-ui-styles.min.js.map
