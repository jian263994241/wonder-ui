{"version":3,"file":"styles.cjs.production.min.js","sources":["../src/utils/transitions.ts","../src/theme/createHairline.ts","../src/utils/colorManipulator.ts","../src/theme/colors.ts","../src/theme/createPalette.ts","../src/theme/createTypography.ts","../src/theme/createSpacing.ts","../src/theme/shadows.ts","../src/theme/zIndex.ts","../src/theme/svg.ts","../src/theme/createTheme.ts","../src/theme/createShape.ts","../src/theme/defaultTheme.ts","../src/theming.ts","../src/createStyles.ts","../src/createUseStyles.ts","../src/withStyles.tsx"],"sourcesContent":["import * as CSS from 'csstype';\n\nexport type easingType = {\n  easeInOut: string;\n  easeOut: string;\n  easeIn: string;\n  ease: string;\n  sharp: string;\n};\n\nexport const easing: easingType = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  //\n  ease: 'cubic-bezier(0.25, 0.01, 0.25, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n};\n\nexport type DurationType = {\n  shortest: number;\n  shorter: number;\n  short: number;\n  standard: number;\n  complex: number;\n  enteringScreen: number;\n  leavingScreen: number;\n};\n\nexport const duration: DurationType = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\n\nexport const formatMs = (milliseconds: number) =>\n  `${Math.round(milliseconds)}ms`;\n\nexport const create = (\n  props:\n    | CSS.Property.TransitionProperty\n    | (keyof CSS.StandardLonghandProperties)[] = 'all',\n  options: {\n    duration?: keyof DurationType | number;\n    easing?: keyof easingType;\n    delay?: number;\n  } = {}\n) => {\n  const {\n    duration: durationOption = 'standard',\n    easing: easingOption = 'easeInOut',\n    delay = 0\n  } = options;\n\n  return (Array.isArray(props) ? props : [props])\n    .map(\n      (animatedProp) =>\n        `${animatedProp} ${\n          typeof durationOption === 'string'\n            ? formatMs(duration[durationOption])\n            : formatMs(durationOption)\n        } ${easing[easingOption]} ${\n          typeof delay === 'string' ? delay : formatMs(delay)\n        }`\n    )\n    .join(',');\n};\n","import type { CSSProperties } from '../types';\nimport createPalette from './createPalette';\n\ntype Position = 'top' | 'bottom' | 'left' | 'right';\n\nconst pixelRatio = 3;\n\nfunction create(\n  position: Position,\n  color = '#999',\n  coverStyles?: CSSProperties\n) {\n  let styles;\n  const base = {\n    content: '\"\"',\n    position: 'absolute',\n    backgroundColor: color,\n    display: 'block',\n    zIndex: 15\n  };\n\n  const scaleY = {\n    transform: `scaleY(${1 / pixelRatio})`\n  };\n\n  const scaleX = {\n    transform: `scaleX(${1 / pixelRatio})`\n  };\n\n  switch (position) {\n    case 'top':\n      styles = {\n        '&:before': {\n          ...base,\n          ...scaleY,\n          left: 0,\n          top: 0,\n          bottom: 'auto',\n          right: 'auto',\n          height: 1,\n          width: '100%',\n          transformOrigin: '50% 0%',\n          ...coverStyles\n        }\n      };\n      break;\n    case 'left':\n      styles = {\n        '&:before': {\n          ...base,\n          ...scaleX,\n          left: 0,\n          top: 0,\n          bottom: 'auto',\n          right: 'auto',\n          width: 1,\n          height: '100%',\n          transformOrigin: '100% 50%',\n          ...coverStyles\n        }\n      };\n      break;\n    case 'bottom':\n      styles = {\n        '&:after': {\n          ...base,\n          ...scaleY,\n          left: 0,\n          bottom: 0,\n          right: 'auto',\n          top: 'auto',\n          height: 1,\n          width: '100%',\n          transformOrigin: '50% 100%',\n          ...coverStyles\n        }\n      };\n      break;\n    case 'right':\n      styles = {\n        '&:after': {\n          ...base,\n          ...scaleX,\n          right: 0,\n          top: 0,\n          left: 'auto',\n          bottom: 'auto',\n          width: 1,\n          height: '100%',\n          transformOrigin: '0% 50%',\n          ...coverStyles\n        }\n      };\n      break;\n  }\n\n  return styles;\n}\n\nfunction remove(position: Position) {\n  let result = {};\n  switch (position) {\n    case 'left':\n    case 'top':\n      result = {\n        '&:before': {\n          display: 'none'\n        }\n      };\n      break;\n    case 'right':\n    case 'bottom':\n      result = {\n        '&:after': {\n          display: 'none'\n        }\n      };\n      break;\n  }\n  return result;\n}\n\nexport default function createHairline(\n  palette: ReturnType<typeof createPalette>\n) {\n  return {\n    create: (position: Position, coverStyles?: CSSProperties) =>\n      create(position, palette.divider, coverStyles),\n    remove\n  };\n}\n","type ColorObject = {\n  type: 'rgb' | 'rgba' | 'hsl' | 'hsla';\n  values: any[];\n};\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value: number, min: number = 0, max: number = 1): number {\n  if (value < min) {\n    return min;\n  }\n  if (value > max) {\n    return max;\n  }\n  return value;\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n *\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nexport function hexToRgb(color: string): string {\n  color = color.substr(1);\n\n  const re = new RegExp(`.{1,${color.length / 3}}`, 'g');\n  let colors = color.match(re);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map((n) => n + n);\n  }\n\n  return colors ? `rgb(${colors.map((n) => parseInt(n, 16)).join(', ')})` : '';\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\n\nexport function decomposeColor(color: string | ColorObject): ColorObject {\n  // Idempotent\n  if (typeof color !== 'string' && color.type) {\n    return color;\n  }\n\n  if (typeof color === 'string' && color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n\n  if (typeof color === 'string') {\n    const marker = color.indexOf('(');\n    const type = color.substring(0, marker) as ColorObject['type'];\n\n    if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {\n      throw new Error(\n        [\n          `Colors: unsupported \\`${color}\\` color.`,\n          'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'\n        ].join('\\n')\n      );\n    }\n\n    let values: number[] = color\n      .substring(marker + 1, color.length - 1)\n      .split(',')\n      .map((value) => parseFloat(value));\n\n    return { type, values };\n  }\n\n  return color;\n}\n\n/**\n * Converts a color object with type and values to a string.\n *\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nexport function recomposeColor(color: ColorObject) {\n  const { type } = color;\n  let { values } = color;\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => (i < 3 ? parseInt(n, 10) : n));\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n\n  return `${type}(${values.join(', ')})`;\n}\n\nfunction intToHex(int: number): string {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n *\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nexport function rgbToHex(color: string | ColorObject): string {\n  // Idempotent\n  if (typeof color === 'string' && color.indexOf('#') === 0) {\n    return color;\n  }\n\n  const { values } = decomposeColor(color);\n  return `#${values.map((n) => intToHex(n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n *\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nexport function hslToRgb(color: string | ColorObject) {\n  color = decomposeColor(color);\n  const { values } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n: number, k: number = (n + h / 30) % 12) =>\n    l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\n  let type: ColorObject['type'] = 'rgb';\n  const rgb = [\n    Math.round(f(0) * 255),\n    Math.round(f(8) * 255),\n    Math.round(f(4) * 255)\n  ];\n\n  if (color.type === 'hsla') {\n    type = 'rgba';\n    rgb.push(values[3]);\n  }\n\n  return recomposeColor({ type, values: rgb });\n}\n\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nexport function getLuminance(color: string | ColorObject) {\n  color = decomposeColor(color);\n\n  let rgb =\n    color.type === 'hsl'\n      ? decomposeColor(hslToRgb(color)).values\n      : color.values;\n  rgb = rgb.map((val) => {\n    val /= 255; // normalized\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number(\n    (0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3)\n  );\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nexport function getContrastRatio(foreground: string, background: string) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Darkens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function darken(color: string | ColorObject, coefficient: number) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\n\n/**\n * Lightens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function lighten(color: string | ColorObject, coefficient: number) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(\n  color: string | ColorObject,\n  coefficient: number = 0.15\n) {\n  return getLuminance(color) > 0.5\n    ? darken(color, coefficient)\n    : lighten(color, coefficient);\n}\n\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0 -1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function fade(color: string | ColorObject, value: number) {\n  color = decomposeColor(color);\n  value = clamp(value);\n\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  color.values[3] = value;\n\n  return recomposeColor(color);\n}\n","export type ColorKeys =\n  | '50'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900'\n  | 'A100'\n  | 'A200'\n  | 'A400'\n  | 'A700';\n\nexport type ColorType = {\n  [K in ColorKeys]: string;\n};\n\nexport const amber: ColorType = {\n  50: '#fff8e1',\n  100: '#ffecb3',\n  200: '#ffe082',\n  300: '#ffd54f',\n  400: '#ffca28',\n  500: '#ffc107',\n  600: '#ffb300',\n  700: '#ffa000',\n  800: '#ff8f00',\n  900: '#ff6f00',\n  A100: '#ffe57f',\n  A200: '#ffd740',\n  A400: '#ffc400',\n  A700: '#ffab00'\n};\n\nexport const blue: ColorType = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\n\nexport const blueGrey: ColorType = {\n  50: '#eceff1',\n  100: '#cfd8dc',\n  200: '#b0bec5',\n  300: '#90a4ae',\n  400: '#78909c',\n  500: '#607d8b',\n  600: '#546e7a',\n  700: '#455a64',\n  800: '#37474f',\n  900: '#263238',\n  A100: '#cfd8dc',\n  A200: '#b0bec5',\n  A400: '#78909c',\n  A700: '#455a64'\n};\n\nexport const brown: ColorType = {\n  50: '#efebe9',\n  100: '#d7ccc8',\n  200: '#bcaaa4',\n  300: '#a1887f',\n  400: '#8d6e63',\n  500: '#795548',\n  600: '#6d4c41',\n  700: '#5d4037',\n  800: '#4e342e',\n  900: '#3e2723',\n  A100: '#d7ccc8',\n  A200: '#bcaaa4',\n  A400: '#8d6e63',\n  A700: '#5d4037'\n};\n\nexport const cyan: ColorType = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\n\nexport const deepOrange: ColorType = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\n\nexport const deepPurple: ColorType = {\n  50: '#ede7f6',\n  100: '#d1c4e9',\n  200: '#b39ddb',\n  300: '#9575cd',\n  400: '#7e57c2',\n  500: '#673ab7',\n  600: '#5e35b1',\n  700: '#512da8',\n  800: '#4527a0',\n  900: '#311b92',\n  A100: '#b388ff',\n  A200: '#7c4dff',\n  A400: '#651fff',\n  A700: '#6200ea'\n};\n\nexport const green: ColorType = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\n\nexport const grey: ColorType = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#d5d5d5',\n  A200: '#aaaaaa',\n  A400: '#303030',\n  A700: '#616161'\n};\n\nexport const indigo: ColorType = {\n  50: '#e8eaf6',\n  100: '#c5cae9',\n  200: '#9fa8da',\n  300: '#7986cb',\n  400: '#5c6bc0',\n  500: '#3f51b5',\n  600: '#3949ab',\n  700: '#303f9f',\n  800: '#283593',\n  900: '#1a237e',\n  A100: '#8c9eff',\n  A200: '#536dfe',\n  A400: '#3d5afe',\n  A700: '#304ffe'\n};\n\nexport const lightBlue: ColorType = {\n  50: '#e1f5fe',\n  100: '#b3e5fc',\n  200: '#81d4fa',\n  300: '#4fc3f7',\n  400: '#29b6f6',\n  500: '#03a9f4',\n  600: '#039be5',\n  700: '#0288d1',\n  800: '#0277bd',\n  900: '#01579b',\n  A100: '#80d8ff',\n  A200: '#40c4ff',\n  A400: '#00b0ff',\n  A700: '#0091ea'\n};\n\nexport const lightGreen: ColorType = {\n  50: '#f1f8e9',\n  100: '#dcedc8',\n  200: '#c5e1a5',\n  300: '#aed581',\n  400: '#9ccc65',\n  500: '#8bc34a',\n  600: '#7cb342',\n  700: '#689f38',\n  800: '#558b2f',\n  900: '#33691e',\n  A100: '#ccff90',\n  A200: '#b2ff59',\n  A400: '#76ff03',\n  A700: '#64dd17'\n};\n\nexport const lime: ColorType = {\n  50: '#f9fbe7',\n  100: '#f0f4c3',\n  200: '#e6ee9c',\n  300: '#dce775',\n  400: '#d4e157',\n  500: '#cddc39',\n  600: '#c0ca33',\n  700: '#afb42b',\n  800: '#9e9d24',\n  900: '#827717',\n  A100: '#f4ff81',\n  A200: '#eeff41',\n  A400: '#c6ff00',\n  A700: '#aeea00'\n};\n\nexport const orange: ColorType = {\n  50: '#fff3e0',\n  100: '#ffe0b2',\n  200: '#ffcc80',\n  300: '#ffb74d',\n  400: '#ffa726',\n  500: '#ff9800',\n  600: '#fb8c00',\n  700: '#f57c00',\n  800: '#ef6c00',\n  900: '#e65100',\n  A100: '#ffd180',\n  A200: '#ffab40',\n  A400: '#ff9100',\n  A700: '#ff6d00'\n};\n\nexport const pink: ColorType = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\n\nexport const purple: ColorType = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\n\nexport const red: ColorType = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\n\nexport const teal: ColorType = {\n  50: '#e0f2f1',\n  100: '#b2dfdb',\n  200: '#80cbc4',\n  300: '#4db6ac',\n  400: '#26a69a',\n  500: '#009688',\n  600: '#00897b',\n  700: '#00796b',\n  800: '#00695c',\n  900: '#004d40',\n  A100: '#a7ffeb',\n  A200: '#64ffda',\n  A400: '#1de9b6',\n  A700: '#00bfa5'\n};\n\nexport const yellow: ColorType = {\n  50: '#fffde7',\n  100: '#fff9c4',\n  200: '#fff59d',\n  300: '#fff176',\n  400: '#ffee58',\n  500: '#ffeb3b',\n  600: '#fdd835',\n  700: '#fbc02d',\n  800: '#f9a825',\n  900: '#f57f17',\n  A100: '#ffff8d',\n  A200: '#ffff00',\n  A400: '#ffea00',\n  A700: '#ffd600'\n};\n","import {\n  darken,\n  getContrastRatio,\n  lighten,\n  fade\n} from '../utils/colorManipulator';\nimport {\n  blue,\n  green,\n  grey,\n  orange,\n  pink,\n  red,\n  ColorKeys,\n  ColorType\n} from './colors';\nimport * as colors from './colors'\n\nexport interface ThemeColor {\n  text: {\n    primary: string;\n    secondary: string;\n    disabled: string;\n    hint: string;\n  };\n  divider: string;\n  background: {\n    paper: string;\n    default: string;\n  };\n  action: {\n    active: string;\n    hover: string;\n    hoverOpacity: number;\n    selected: string;\n    disabled: string;\n    disabledBackground: string;\n  };\n}\n\ntype Direction = 'light' | 'dark';\n\ntype ColorIntent = {\n  main: string;\n  light?: string;\n  dark?: string;\n  contrastText?: string;\n} & Partial<ColorType>;\n\nexport interface Palette {\n  primary: ColorIntent;\n  secondary: ColorIntent;\n  error: ColorIntent;\n  warning: ColorIntent;\n  info: ColorIntent;\n  success: ColorIntent;\n  type: Direction;\n  contrastThreshold: number;\n  tonalOffset: number;\n}\n\nexport interface CommonColor {\n  black: string;\n  white: string;\n}\n\nconst common: CommonColor = {\n  black: '#000',\n  white: '#fff'\n};\n\nexport const light: ThemeColor = {\n  text: {\n    primary: fade(common.black, 0.87),\n    secondary: fade(common.black, 0.54),\n    disabled: fade(common.black, 0.38),\n    hint: fade(common.black, 0.38)\n  },\n  divider: grey[300],\n  background: {\n    paper: common.white,\n    default: grey[50]\n  },\n  action: {\n    // The color of an active action like an icon button.\n    active: fade(common.black, 0.54),\n    // The color of an hovered action.\n    hover: fade(common.black, 0.08),\n    hoverOpacity: 0.08,\n    // The color of a selected action.\n    selected: fade(common.black, 0.14),\n    // The color of a disabled action.\n    disabled: fade(common.black, 0.26),\n    // The background color of a disabled action.\n    disabledBackground: fade(common.black, 0.12)\n  }\n};\n\nexport const dark: ThemeColor = {\n  text: {\n    primary: fade(common.white, 0.87),\n    secondary: fade(common.white, 0.7),\n    disabled: fade(common.white, 0.5),\n    hint: fade(common.white, 0.5)\n  },\n  divider: fade(common.white, 0.12),\n  background: {\n    paper: grey[800],\n    default: grey.A400\n  },\n  action: {\n    // The color of an active action like an icon button.\n    active: common.white,\n    // The color of an hovered action.\n    hover: fade(common.white, 0.1),\n    hoverOpacity: 0.08,\n    // The color of a selected action.\n    selected: fade(common.white, 0.2),\n    // The color of a disabled action.\n    disabled: fade(common.white, 0.3),\n    // The background color of a disabled action.\n    disabledBackground: fade(common.white, 0.12)\n  }\n};\n\nfunction addLightOrDark(\n  intent: ColorIntent,\n  direction: Direction,\n  shade: ColorKeys,\n  tonalOffset: number\n) {\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffset);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffset * 1.5);\n    }\n  }\n}\n\nexport default function createPalette(palette: Partial<Palette> = {}) {\n  const {\n    primary = {\n      light: blue.A200,\n      main: blue.A400,\n      dark: blue.A700\n    },\n    secondary = {\n      light: pink.A200,\n      main: pink.A400,\n      dark: pink.A700\n    },\n    error = {\n      light: red[300],\n      main: red[500],\n      dark: red[700]\n    },\n    warning = {\n      light: orange[300],\n      main: orange[500],\n      dark: orange[700]\n    },\n    info = {\n      light: blue[300],\n      main: blue[500],\n      dark: blue[700]\n    },\n    success = {\n      light: green[300],\n      main: green[500],\n      dark: green[700]\n    },\n    type = 'light',\n    contrastThreshold = 3,\n    tonalOffset = 0.2\n  } = palette;\n\n  const types = { dark, light };\n\n  function getContrastText(background: string) {\n    const contrastText =\n      getContrastRatio(background, dark.text.primary) >= contrastThreshold\n        ? dark.text.primary\n        : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = getContrastRatio(background, contrastText);\n      if (contrast < 3) {\n        console.error(\n          [\n            `The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`,\n            'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.',\n            'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'\n          ].join('\\n')\n        );\n      }\n    }\n\n    return contrastText;\n  }\n\n  function augmentColor(\n    color: ColorIntent,\n    mainShade: ColorKeys = '500',\n    lightShade: ColorKeys = '300',\n    darkShade: ColorKeys = '700'\n  ): ColorIntent {\n    color = { ...color };\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade] as string;\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  }\n\n  return {\n    common,\n    type,\n    primary: augmentColor(primary),\n    secondary: augmentColor(secondary, 'A400', 'A200', 'A700'),\n    error: augmentColor(error),\n    warning: augmentColor(warning),\n    info: augmentColor(info),\n    success: augmentColor(success),\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset,\n    ...types[type],\n    ...colors\n  };\n}\n","import { CSSProperties } from '../types';\nexport interface Typography {\n  fontFamily: string;\n  fontSize: number;\n  fontWeightLight: number;\n  fontWeightRegular: number;\n  fontWeightMedium: number;\n  fontWeightBold: number;\n  htmlFontSize: number;\n}\n\nexport interface BuildVariant {\n  fontFamily: CSSProperties['fontFamily'];\n  fontWeight: CSSProperties['fontWeight'];\n  fontSize: CSSProperties['fontSize'];\n  lineHeight: CSSProperties['lineHeight'];\n  letterSpacing?: CSSProperties['letterSpacing'];\n  textTransform?: CSSProperties['textTransform'];\n}\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\n\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif`;\n\nexport default function createTypography(typography: Partial<Typography> = {}) {\n  const {\n    fontFamily = defaultFontFamily,\n    // The default font size of the Material Specification.\n    fontSize = 14, // px\n    fontWeightLight = 300,\n    fontWeightRegular = 400,\n    fontWeightMedium = 500,\n    fontWeightBold = 700,\n    // Tell Material-UI what's the font-size on the html element.\n    // 16px is the default font-size used by browsers.\n    htmlFontSize = 16\n    // Apply the CSS properties to all the variants.\n    // allVariants,\n  } = typography;\n\n  const coef = fontSize / 14;\n  const pxToRem = (size: number) => `${(size / htmlFontSize) * coef}rem`;\n\n  function buildVariant(\n    fontWeight: number,\n    fontSize: number,\n    lineHeight: number,\n    letterSpacing: number,\n    allVariants?: object\n  ): BuildVariant {\n    return {\n      fontFamily,\n      fontWeight,\n      fontSize: pxToRem(fontSize),\n      // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n      lineHeight,\n      // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing\n      // across font-families can cause issues with the kerning.\n      ...(fontFamily === defaultFontFamily\n        ? { letterSpacing: `${round(letterSpacing / fontSize)}em` }\n        : {}),\n      ...allVariants\n    };\n  }\n\n  const variants = {\n    h1: buildVariant(fontWeightLight, 40, 1, -1.5),\n    h2: buildVariant(fontWeightLight, 36, 1, -0.5),\n    h3: buildVariant(fontWeightRegular, 32, 1.04, 0),\n    h4: buildVariant(fontWeightRegular, 28, 1.17, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.33, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n\n  return {\n    htmlFontSize,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold,\n    pxToRem,\n    ...variants\n  };\n}\n","export default function createSpacing(spacingInput: number = 8) {\n  const transform =\n    typeof spacingInput === 'function'\n      ? (spacingInput as () => number)\n      : (factor: number) => {\n          return spacingInput * factor;\n        };\n\n  const spacing = (...args: number[]): string | number => {\n    if (args.length === 0) {\n      return transform(1);\n    }\n\n    if (args.length === 1) {\n      return transform(args[0]);\n    }\n\n    return args\n      .map((factor) => {\n        const output = transform(factor);\n        return typeof output === 'number' ? `${output}px` : output;\n      })\n      .join(' ');\n  };\n\n  return spacing;\n}\n","const shadowKeyUmbraOpacity = 0.16;\nconst shadowKeyPenumbraOpacity = 0.14;\nconst shadowAmbientShadowOpacity = 0.12;\n\nfunction createShadow(...px: number[]) {\n  return [\n    `${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`,\n    `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`,\n    `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`\n  ].join(',');\n}\n\nconst shadows = [\n  'none',\n  createShadow(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1),\n  createShadow(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2),\n  createShadow(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2),\n  createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),\n  createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),\n  createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),\n  createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),\n  createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),\n  createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),\n  createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),\n  createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),\n  createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),\n  createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),\n  createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),\n  createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),\n  createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),\n  createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),\n  createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),\n  createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),\n  createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),\n  createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),\n  createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),\n  createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),\n  createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)\n];\n\nexport default shadows;\n","export default {\n  mobileStepper: 1000,\n  speedDial: 1050,\n  appBar: 1100,\n  drawer: 1200,\n  modal: 1300,\n  snackbar: 1400,\n  tooltip: 1500,\n}\n","\n\nexport const create = (svgString: string) => `url(data:image/svg+xml;utf8,${encodeURIComponent(svgString)})`\n","import * as transitions from '../utils/transitions';\nimport createHairline from './createHairline';\nimport createPalette, { Palette } from './createPalette';\nimport createTypography, { Typography } from './createTypography';\nimport createSpacing from './createSpacing';\nimport createShape from './createShape';\nimport shadows from './shadows';\nimport zIndex from './zIndex'\nimport * as svg from './svg';\n\ntype ThemeOptions = {\n  palette?: Partial<Palette>;\n  spacing?: number;\n  typography?: Partial<Typography>;\n  shape?: ReturnType<typeof createShape>\n};\n\nexport interface Theme {\n  shadows: typeof shadows;\n  palette: ReturnType<typeof createPalette>;\n  transitions: typeof transitions;\n  typography: ReturnType<typeof createTypography>;\n  spacing: ReturnType<typeof createSpacing>;\n  hairline: ReturnType<typeof createHairline>;\n  shape: ReturnType<typeof createShape>;\n  zIndex: typeof zIndex;\n  svg: typeof svg;\n}\n\nexport default function createTheme(options: ThemeOptions = {}): Theme {\n  const { palette: paletteInput, spacing = 8, shape: shapeInput, typography } = options;\n\n  const palette = createPalette(paletteInput);\n\n  return {\n    palette,\n    typography: createTypography(typography),\n    spacing: createSpacing(spacing),\n    hairline: createHairline(palette),\n    transitions,\n    shape: createShape(shapeInput),\n    shadows,\n    zIndex,\n    svg\n  };\n}\n","export default function createShape(cover?: object) {\n  return {\n    barHeight: 46,\n    borderRadius: 4,\n    buttonBorderRadius: 23,\n    listItemHeight: 46,\n    ...cover\n  };\n};\n","import createTheme, { Theme } from './createTheme';\n\nexport interface DefaultTheme extends Theme {}\n\nconst theme: DefaultTheme = createTheme();\n\nexport default theme;\n","import * as React from 'react';\nimport { createTheming, Theming } from 'react-jss';\nimport defaultTheme, { DefaultTheme } from './theme/defaultTheme';\n\nconst ThemeContext_ = React.createContext(defaultTheme)\n\nconst theming = createTheming<DefaultTheme>(ThemeContext_)\n\nconst { ThemeProvider, context: ThemeContext, useTheme, withTheme } = theming\n\nexport type { Theming }\n\nexport {\n  createTheming,\n  ThemeContext,\n  withTheme,\n  useTheme,\n  ThemeProvider,\n  theming\n};\n","import { Styles } from './types';\nimport { DefaultTheme } from './theme/defaultTheme';\n\nexport default function createStyles<\n  Theme = DefaultTheme,\n  Props extends object = {},\n  ClassKey extends string = string\n>(styles: Styles<Theme, Props, ClassKey>): Styles<Theme, Props, ClassKey> {\n  return styles;\n}\n","import * as React from 'react';\nimport type { Styles, ClassNameMap, AnyProps } from './types';\nimport { DefaultTheme } from './theme/defaultTheme';\nimport { createUseStyles as rjCreateUseStyles, Styles as RjStyles, Theming } from 'react-jss';\nimport { CreateUseStylesOptions } from './types'\nimport { theming as defaultTheming } from './theming'\n\nexport default function createUseStyles<\n  Theme = DefaultTheme,\n  Props extends object = {},\n  ClassKey extends string = string\n>(\n  styles: Styles<Theme, AnyProps<Props>, ClassKey>,\n  options: CreateUseStylesOptions<Theme> = {}\n) : (data?: Partial<Props> ) => ClassNameMap<ClassKey> {\n\n  const { theming = defaultTheming as Theming<any>, ...rest } = options;\n\n  return rjCreateUseStyles<Theme, ClassKey>(styles as RjStyles<ClassKey>, { theming, ...rest })\n}\n\n\n","import * as React from 'react';\nimport type { Styles, WithStylesOptions, ThemeOfStyles } from './types';\nimport rjWithStyles from 'react-jss'\nimport { theming as defaultTheming } from './theming'\n\n\nexport default function createWithStyles<StylesType extends Styles<any, any>>(\n  styles: StylesType,\n  options: WithStylesOptions<ThemeOfStyles<StylesType>> = {}\n){\n  const { theming = defaultTheming as any, ...rest } = options;\n\n  return rjWithStyles(styles, { theming, ...rest })\n}\n"],"names":["easing","easeInOut","easeOut","easeIn","ease","sharp","duration","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","formatMs","milliseconds","Math","round","props","options","durationOption","easingOption","delay","Array","isArray","map","animatedProp","join","remove","position","result","display","createHairline","palette","create","coverStyles","color","styles","base","content","backgroundColor","zIndex","scaleY","transform","scaleX","left","top","bottom","right","height","width","transformOrigin","divider","clamp","value","min","max","hexToRgb","substr","re","RegExp","length","colors","match","n","parseInt","decomposeColor","type","charAt","marker","indexOf","substring","Error","values","split","parseFloat","recomposeColor","i","hslToRgb","h","l","a","f","k","rgb","push","getLuminance","val","Number","toFixed","getContrastRatio","foreground","background","lumA","lumB","darken","coefficient","lighten","fade","hex","toString","blue","A100","A200","A400","A700","green","grey","orange","pink","red","common","black","white","light","text","primary","secondary","disabled","hint","paper","default","action","active","hover","hoverOpacity","selected","disabledBackground","dark","addLightOrDark","intent","direction","shade","tonalOffset","hasOwnProperty","main","caseAllCaps","textTransform","defaultFontFamily","createTypography","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","coef","pxToRem","size","buildVariant","fontWeight","lineHeight","letterSpacing","allVariants","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","createSpacing","spacingInput","factor","args","output","createShadow","shadows","mobileStepper","speedDial","appBar","drawer","modal","snackbar","tooltip","svgString","encodeURIComponent","createTheme","cover","spacing","shapeInput","shape","error","warning","info","success","contrastThreshold","types","getContrastText","augmentColor","mainShade","lightShade","darkShade","contrastText","createPalette","hairline","transitions","barHeight","borderRadius","buttonBorderRadius","listItemHeight","svg","theme","theming","createTheming","React","defaultTheme","ThemeProvider","ThemeContext","context","useTheme","withTheme","defaultTheming","rest","rjCreateUseStyles","rjWithStyles"],"mappings":"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,KAAM,UACNC,KAAM,UACNC,KAAM,mCA9RwB,IAC1B,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,2BAoB2B,IAC7B,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,iBAGwB,IAC1B,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,gBAGuB,IACzB,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,sBAG6B,IAC/B,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,sBAG6B,IAC/B,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,iCAqCyB,IAC3B,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,qBAG4B,IAC9B,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,sBAG6B,IAC/B,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,gBAGuB,IACzB,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,kCAqCyB,IAC3B,cACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,UACLH,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,sBAoBuB,IACzB,cACC,cACA,cACA,cACA,cACA,cACA,cA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"}